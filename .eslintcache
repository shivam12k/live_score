[{"D:\\live_score\\src\\App.js":"1","D:\\live_score\\src\\reportWebVitals.js":"2","D:\\live_score\\src\\index.js":"3","D:\\live_score\\src\\components\\Navbar.jsx":"4","D:\\live_score\\src\\api\\api.js":"5","D:\\live_score\\src\\components\\MyCard.jsx":"6"},{"size":950,"mtime":1610874348576,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610695914889,"results":"9","hashOfConfig":"8"},{"size":454,"mtime":1610699606422,"results":"10","hashOfConfig":"8"},{"size":1800,"mtime":1610897838589,"results":"11","hashOfConfig":"8"},{"size":662,"mtime":1610877002408,"results":"12","hashOfConfig":"8"},{"size":3815,"mtime":1610878962769,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6pc24o",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\live_score\\src\\App.js",[],"D:\\live_score\\src\\reportWebVitals.js",[],"D:\\live_score\\src\\index.js",[],"D:\\live_score\\src\\components\\Navbar.jsx",["27"],"D:\\live_score\\src\\api\\api.js",[],"D:\\live_score\\src\\components\\MyCard.jsx",["28"],"import { Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@material-ui/core'\r\nimport React, { Fragment, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Image from '../images/verses.png'\r\nimport { getMatchDetails } from '../api/api';\r\n\r\nconst MyCard = ({ match, key }) => {\r\n\r\n    const [details, setdetails] = useState({})\r\n    const [open, setopen] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        setopen(false)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setopen(true)\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        getMatchDetails(id).then(data => {\r\n            console.log(\"match data\", data)\r\n            setdetails(data)\r\n            handleOpen();\r\n        }).catch(err => { console.error(err) })\r\n    }\r\n\r\n    const getdilogBox = () => {\r\n        return (\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"alert-dilog-title\">{\"Match Details...\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dilog-discription\">\r\n                        <Typography>{details.stat}</Typography>\r\n                        <Typography>\r\n                            Match\r\n                        <span style={{ fontWeight: 'bolder' }}>\r\n                                {details.matchStarted ? \" started\" : \"still not started\"}\r\n                            </span>\r\n                        </Typography>\r\n                        <Typography>\r\n                            Score\r\n                        <span style={{ fontWeight: 'bolder' }}>\r\n                                {details.score}\r\n                            </span>\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\"></Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n\r\n    const getMatchCard = () => {\r\n        return (\r\n            <Card style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }} variant=\"outlined\" square>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Grid item sm={3}> <Typography> {match[\"team-1\"]} </Typography> </Grid>\r\n                        <Grid item sm={3}> <Typography>\r\n                            <img style={{ width: 67 }} src={Image} />\r\n                        </Typography> </Grid>\r\n                        <Grid item sm={3}> <Typography>{match[\"team-2\"]}</Typography> </Grid>\r\n                    </Grid>\r\n                    <Typography>\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\">\r\n                        <Button size=\"small\" variant=\"contained\"\r\n                            style={{ marginRight: 5 }}\r\n                            color=\"primary\"\r\n                            onClick={() => handleClick(match.unique_id)}>Show Details\r\n                        </Button>\r\n                        <Button size=\"small\" variant=\"outlined\"\r\n                            style={{ marginTop: 5 }}\r\n                            color=\"primary\">Start Time : {new Date(match.dateTimeGMT).toLocaleString()}\r\n                        </Button>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n          {  getMatchCard()}\r\n           { getdilogBox()}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MyCard;",{"ruleId":"29","severity":1,"message":"30","line":5,"column":8,"nodeType":"31","messageId":"32","endLine":5,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":65,"column":29,"nodeType":"35","endLine":65,"endColumn":70},"no-unused-vars","'SvgIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]