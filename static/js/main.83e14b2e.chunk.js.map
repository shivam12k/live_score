{"version":3,"sources":["components/Navbar.jsx","api/api.js","images/verses.png","components/MyCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","Typography","variant","Api_key","MyCard","match","key","useState","details","setdetails","open","setopen","handleClose","handleClick","id","url","replace","fetch","then","res","json","catch","err","console","error","getMatchDetails","data","log","Card","style","marginTop","marginLeft","marginRight","square","CardContent","Grid","container","justify","alignItems","item","sm","width","src","Image","CardActions","Button","size","color","onClick","unique_id","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontWeight","matchStarted","score","DialogActions","App","matches","setmatches","useEffect","getScore","className","map","type","Box","boxShadow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83e14b2e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core'\r\nimport  MenuIcon from \"@material-ui/icons/Menu\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" >\r\n                    Live Score\r\n                 </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar","const Api_key = ' BtzBNz2Kk3fgBg3ap6u6UBUwwWA2';\r\nexport const getScore = () => {\r\n    const url = `https://cricapi.com/api/matches?apikey=${Api_key}`.replace(/\\s+/g, '');\r\n    console.log(url)\r\n    return (\r\n        fetch(url).then(res => {\r\n            return res.json();\r\n        }).catch(err => {\r\n            console.error(err);\r\n        }))\r\n}\r\n\r\n// loading match details\r\nexport const getMatchDetails = (id) => {\r\n    const url = `https://cricapi.com/api/cricketScore?apikey=${Api_key}&unique_id=${id}`.replace(/\\s+/g, '');\r\n    return (\r\n        fetch(url)\r\n        .then(res => { return res.json() })\r\n        .catch(err => console.error(err))\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/verses.cae0f223.png\";","import { Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@material-ui/core'\r\nimport React, { Fragment, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Image from '../images/verses.png'\r\nimport { getMatchDetails } from '../api/api';\r\n\r\nconst MyCard = ({ match, key }) => {\r\n\r\n    const [details, setdetails] = useState({})\r\n    const [open, setopen] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        setopen(false)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setopen(true)\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        getMatchDetails(id).then(data => {\r\n            console.log(\"match data\", data)\r\n            setdetails(data)\r\n            handleOpen();\r\n        }).catch(err => { console.error(err) })\r\n    }\r\n\r\n    const getdilogBox = () => {\r\n        return (\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle id=\"alert-dilog-title\">{\"Match Details...\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dilog-discription\">\r\n                        <Typography>{details.stat}</Typography>\r\n                        <Typography>\r\n                            Match\r\n                        <span style={{ fontWeight: 'bolder' }}>\r\n                                {details.matchStarted ? \" started\" : \"still not started\"}\r\n                            </span>\r\n                        </Typography>\r\n                        <Typography>\r\n                            Score\r\n                        <span style={{ fontWeight: 'bolder' }}>\r\n                                {details.score}\r\n                            </span>\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\"></Button>\r\n                </DialogActions>\r\n            </Dialog>)\r\n    }\r\n\r\n    const getMatchCard = () => {\r\n        return (\r\n            <Card style={{ marginTop: 30, marginLeft: 20, marginRight: 20 }} variant=\"outlined\" square>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\">\r\n                        <Grid item sm={3}> <Typography> {match[\"team-1\"]} </Typography> </Grid>\r\n                        <Grid item sm={3}> <Typography>\r\n                            <img style={{ width: 67 }} src={Image} />\r\n                        </Typography> </Grid>\r\n                        <Grid item sm={3}> <Typography>{match[\"team-2\"]}</Typography> </Grid>\r\n                    </Grid>\r\n                    <Typography>\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\">\r\n                        <Button size=\"small\" variant=\"contained\"\r\n                            style={{ marginRight: 5 }}\r\n                            color=\"primary\"\r\n                            onClick={() => handleClick(match.unique_id)}>Show Details\r\n                        </Button>\r\n                        <Button size=\"small\" variant=\"outlined\"\r\n                            style={{ marginTop: 5 }}\r\n                            color=\"primary\">Start Time : {new Date(match.dateTimeGMT).toLocaleString()}\r\n                        </Button>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n          {  getMatchCard()}\r\n           { getdilogBox()}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MyCard;","import React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { getScore } from './api/api'\nimport MyCard from './components/MyCard'\nimport Box from '@material-ui/core/Box';\nconst App = () => {\n  const [matches, setmatches] = useState([])\n\n  useEffect(() => {\n    getScore().then(data => {\n      setmatches(data.matches)\n\n\n    }).catch(err => {\n      console.error(\"ab humsa nahi hoga\", err)\n    });\n  })\n\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <h1 className=\"heading\">welcome to live cricket score</h1>\n\n      {\n        matches.map(match => {\n          return (\n            <Fragment>{\n              (match.type === \"Twenty20\" ?\n                <Box boxShadow={1}>\n                  <MyCard key={match.unique_id} match={match} />\n                </Box> : '')\n            }\n\n            </Fragment>)\n        })\n      }\n\n\n    </div >\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}